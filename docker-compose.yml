version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: academic_postgres
    environment:
      POSTGRES_DB: academic_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - academic_network

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: academic_backend
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: academic_management
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
    ports:
      - "5000:3000"  # NestJS runs on 3000 internally
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads_data:/app/uploads
    working_dir: /app
    command: npm run start:dev
    networks:
      - academic_network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: academic_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    command: npm run dev
    networks:
      - academic_network

  # Redis (Optional)
  redis:
    image: redis:7-alpine
    container_name: academic_redis
    ports:
      - "6379:6379"
    networks:
      - academic_network

volumes:
  postgres_data:
  uploads_data:

networks:
  academic_network:
    driver: bridge
